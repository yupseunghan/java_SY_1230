<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.spring.dao.PostDAO">
	
	<select id="selectPostList" resultType="PostVO">
		select 
			post.*, bo_name as po_bo_name 
		from post
		join board on po_bo_num = bo_num 
		where  po_del = "N"
		<if test="cri.po_bo_num != 0"> 
			and po_bo_num = #{cri.po_bo_num}
		</if>
		<choose>
			<when test="cri.type == 0">
				and (po_title like concat('%', #{cri.search}, '%') 
				or po_content like concat('%', #{cri.search}, '%') 
				or po_me_id = #{cri.search})
			</when>
			<when test="cri.type == 1">
				and (po_title like concat('%', #{cri.search}, '%') 
				or po_content like concat('%', #{cri.search}, '%'))
			</when>
			<when test="cri.type == 2">
				and po_me_id = #{cri.search}
			</when>
		</choose>
		order by po_num desc
		limit #{cri.pageStart}, #{cri.perPageNum}
	</select>
	<select id="selectBoardList" resultType="BoardVO">
		select * from board order by bo_num
	</select>
	<insert id="insertBoard">
		insert into board(bo_name) values(#{bo_name})
	</insert>
	<delete id="deleteBoard">
		delete from board where bo_num = #{bo_num}
	</delete>
	<update id="updateBoard">
		update board 
		set
			bo_name = #{board.bo_name}
		where
			bo_num = #{board.bo_num}
	</update>
	<insert id="insertPost" useGeneratedKeys="true" keyProperty="post.po_num">
		insert into post(po_title, po_content, po_me_id, po_bo_num)
		values(#{post.po_title}, #{post.po_content}, #{post.po_me_id}, #{post.po_bo_num})
	</insert>
	<select id="selectPost" resultType="PostVO">
		select 
			post.*, bo_name as po_bo_name 
		from post
		join board on po_bo_num = bo_num 
		where po_num = #{po_num} and po_del = "N"
	</select>
	<update id="deletePost">
		update post set po_del = "Y" where po_num = #{po_num}
	</update>
	<update id="updatePost">
		update post 
		set
			po_title = #{post.po_title},
			po_content = #{post.po_content}
		where
			po_num = #{post.po_num}
	</update>
	<update id="updateView">
		update post
		set
			po_view = po_view + 1
		where
			po_num = #{po_num}
	</update>
	<insert id="insertFile">
		insert into file(fi_ori_name, fi_name, fi_po_num)
		values(#{file.fi_ori_name},#{file.fi_name},#{file.fi_po_num})
	</insert>
	<select id="selectFileList" resultType="FileVO">
		select * from file where fi_po_num = #{po_num}
	</select>
	<delete id="deleteFile">
		delete from file where fi_num = #{fi_num}
	</delete>
	<select id="selectFile" resultType="FileVO">
		select * from file where fi_num = #{fi_num}	
	</select>
	<select id="selectCountPostList" resultType="int">
		select 
			count(*)
		from post
		where  po_del = "N"
		<if test="cri.po_bo_num != 0"> 
			and po_bo_num = #{cri.po_bo_num}
		</if>
		<choose>
			<when test="cri.type == 0">
				and (po_title like concat('%', #{cri.search}, '%') 
				or po_content like concat('%', #{cri.search}, '%') 
				or po_me_id = #{cri.search})
			</when>
			<when test="cri.type == 1">
				and (po_title like concat('%', #{cri.search}, '%') 
				or po_content like concat('%', #{cri.search}, '%'))
			</when>
			<when test="cri.type == 2">
				and po_me_id = #{cri.search}
			</when>
		</choose>
	</select>
	<select id="selectLike" resultType="LikeVO">
		select * from `like` 
		where li_po_num = #{like.li_po_num} and li_me_id = #{like.li_me_id}
	</select>
	<insert id="insertLike">
		insert into `like`(li_po_num, li_me_id, li_state)
		value(#{like.li_po_num},#{like.li_me_id},#{like.li_state})
	</insert>
	<update id="updateLike">
		update `like` set li_state = #{like.li_state} 
		where li_po_num = #{like.li_po_num} and li_me_id = #{like.li_me_id}
	</update>
	<update id="updateUpDown">
		update post set
		po_up = (select count(*) from `like` where li_po_num = #{po_num} and li_state = 1),
		po_down = (select count(*) from `like` where li_po_num = #{po_num} and li_state = -1)
		where po_num = #{po_num}
	</update>
</mapper>
